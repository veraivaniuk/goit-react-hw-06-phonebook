{"version":3,"sources":["components/Section/Section.module.css","components/SubmitForm/SubmitForm.module.css","components/Container/Container.module.css","components/Button/Button.module.css","components/List/List.module.css","components/FilterContacts/FilterContacts.module.css","components/Container/Container.js","components/Section/Section.js","components/Button/Button.js","redux/selectors.js","redux/actions.js","redux/types.js","components/SubmitForm/SubmitForm.js","components/List/List.js","components/FilterContacts/FilterContacts.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","Button","buttonName","onDelete","button","type","onClick","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","contactsActions","addContact","createAction","number","payload","id","uuidv4","deleteContact","changeFilter","SubmitForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","onSubmit","evt","preventDefault","find","el","toast","warn","label","pattern","required","placeholder","value","onChange","e","target","List","map","list","FilterContacts","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,kBAAkB,mC,mBCAnED,EAAOC,QAAU,CAAC,MAAQ,4B,mBCA1BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,iC,4KCOZC,EANG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,iBCWxBI,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOL,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAEI,QAAtB,UACE,oBAAIL,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBL,M,gCCSUO,MAbf,YAA2C,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAC5B,OACE,wBAAQR,UAAWC,IAAEQ,OAAQC,KAAK,SAASC,QAASH,EAApD,SACGD,K,iBCLMK,EAAW,SAACC,GAAD,OAAWA,EAAMC,SAASC,OACrCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,SAASG,QAEtCC,EAAqB,SAACL,GACjC,IAAME,EAAQH,EAASC,GAEjBM,EADSH,EAAUH,GACOO,cAChC,OAAOL,EAAME,QAAO,SAACI,GAAD,OAClBA,EAAQC,KAAKF,cAAcG,SAASJ,O,eCSzBK,EADS,CAAEC,WAZPC,YCJQ,wBDIkB,SAACJ,EAAMK,GAAP,MAAmB,CAC9DC,QAAS,CACPC,GAAIC,cACJR,OACAK,cAQkCI,cAJhBL,YCXQ,2BDeuBM,aAFhCN,YCZS,4BCMf,SAASO,IACtB,IAAMnB,EAAWoB,YAAYtB,GACvBuB,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOV,EAAP,KAAeY,EAAf,KAoBA,OACE,uBAAMC,SAZa,SAACC,GAEpB,GADAA,EAAIC,iBACA5B,EAAS6B,MAAK,SAACC,GAAD,OAAQA,EAAGtB,OAASA,KAAO,CAE3C,OADqBuB,IAAMC,KAAN,UAAcxB,EAAd,6BAGvBa,EAASX,EAAgBC,WAAWH,EAAMK,IAC1CW,EAAQ,IACRC,EAAU,KAIV,UACE,wBAAOvC,UAAWC,IAAE8C,MAApB,iBAEE,uBACErC,KAAK,OACLY,KAAMA,EACN0B,QAAQ,yHACR5C,MAAM,kcACN6C,UAAQ,EACRC,YAAY,aACZC,MAAO7B,EACP8B,SA9BiB,SAACC,GACxBf,EAAQe,EAAEC,OAAOH,aAgCf,wBAAOnD,UAAWC,IAAE8C,MAApB,mBAEE,uBACErC,KAAK,MACLY,KAAMK,EACNqB,QAAQ,yFACR5C,MAAM,giBACN6C,UAAQ,EACRC,YAAY,eACZC,MAAOxB,EACPyB,SAxCmB,SAACC,GAC1Bd,EAAUc,EAAEC,OAAOH,aA0CjB,cAAC,EAAD,CAAQ5C,WAAW,mB,qBCjCVgD,MArBf,WACE,IAAMzC,EAAWoB,YAAYhB,GACvBiB,EAAWC,cAEjB,OACE,6BACGtB,EAAS0C,KAAI,SAACZ,GACb,OACE,qBAAI5C,UAAWC,IAAEwD,KAAjB,UACGb,EAAGtB,KADN,KACcsB,EAAGjB,OACf,cAAC,EAAD,CACEpB,WAAW,SACXC,SAAU,kBAAM2B,EAASX,EAAgBO,cAAca,EAAGf,UAJlCe,EAAGf,U,iBCc1B6B,EAvBQ,WACrB,IAAMvB,EAAWC,cACXnB,EAASiB,YAAYlB,GAM3B,OACE,gCACE,uDACA,uBACEhB,UAAWC,IAAEgB,OACbP,KAAK,OACLwC,YAAY,aACZC,MAAOlC,EACPK,KAAML,EACNmC,SAbmB,SAACC,GACxBlB,EAASX,EAAgBQ,aAAaqB,EAAEC,OAAOH,e,MCDpC,SAASQ,IACtB,OACE,qCACE,cAAC,IAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,CAASvD,MAAM,YAAf,SACE,cAAC6B,EAAD,MAEF,eAAC,EAAD,CAAS7B,MAAM,WAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,a,sECfJW,EAAQ6C,YAAc,IAAD,mBACxBpC,EAAgBC,YAAa,SAACZ,EAAD,OAAUe,EAAV,EAAUA,QAAV,4BAA4Bf,GAA5B,CAAmCe,OADxC,cAExBJ,EAAgBO,eAAgB,SAAClB,EAAD,OAAUe,EAAV,EAAUA,QAAV,OAC/Bf,EAAMI,QAAO,qBAAGY,KAAgBD,QAHT,IAMrBX,EAAS2C,YAAc,GAAD,eACzBpC,EAAgBQ,cAAe,SAAC6B,EAAD,YAAMjC,YAGzBkC,cAAgB,CAC7B/C,QACAE,WCDI8C,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPvD,SAAUwD,YAAeP,EAAuBQ,IAElDC,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE3DC,OAAOC,MACZC,UAAUC,IAGCC,EAAYC,YAAapB,GC1BtCqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvB,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAawB,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.b516fdbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"move-background\":\"Section_move-background__3P-dh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SubmitForm_label__3zy06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3ccy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterContacts_filter__2UHY5\"};","import s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import s from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\nfunction Button({ buttonName, onDelete }) {\n  return (\n    <button className={s.button} type=\"submit\" onClick={onDelete}>\n      {buttonName}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n\nexport default Button;\n","export const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from \"./types\";\n\nconst addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(DELETE_CONTACT);\n\nconst changeFilter = createAction(FILTER_CONTACT);\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\nexport default contactsActions;\n","export const ADD_CONTACT = \"contacts/ADD_CONTACT\";\nexport const DELETE_CONTACT = \"contacts/DELETE_CONTACT\";\nexport const FILTER_CONTACT = \"contacts/FILTER_CONTACT\";\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Button from \"../Button/Button\";\nimport s from \"./SubmitForm.module.css\";\nimport { useState } from \"react\";\nimport { getItems } from \"../../redux/selectors\";\nimport contactsActions from \"../../redux/actions\";\n\nexport default function SubmitForm() {\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n  const handleChangeNumber = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (contacts.find((el) => el.name === name)) {\n      const notify = () => toast.warn(`${name} is already in contacts!`);\n      return notify();\n    }\n    dispatch(contactsActions.addContact(name, number));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <Button buttonName=\"Add contact\" />\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./List.module.css\";\nimport Button from \"../Button\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\nimport contactsActions from \"../../redux/actions\";\n\nfunction List() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contacts.map((el) => {\n        return (\n          <li className={s.list} key={el.id}>\n            {el.name}: {el.number}\n            <Button\n              buttonName=\"Delete\"\n              onDelete={() => dispatch(contactsActions.deleteContact(el.id))}\n            ></Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default List;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./FilterContacts.module.css\";\nimport { getFilter } from \"../../redux/selectors\";\nimport contactsActions from \"../../redux/actions\";\n\nconst FilterContacts = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterName = (e) => {\n    dispatch(contactsActions.changeFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <h2>Find contacts by name</h2>\n      <input\n        className={s.filter}\n        type=\"text\"\n        placeholder=\"Enter name\"\n        value={filter}\n        name={filter}\n        onChange={handleFilterName}\n      />\n    </div>\n  );\n};\n\nexport default FilterContacts;\n","import \"./App.css\";\nimport Container from \"./components/Container/\";\nimport Section from \"./components/Section\";\nimport SubmitForm from \"./components/SubmitForm\";\nimport List from \"./components/List\";\nimport FilterContacts from \"./components/FilterContacts\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function App() {\n  return (\n    <>\n      <ToastContainer />\n      <Container>\n        <Section title=\"Phonebook\">\n          <SubmitForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterContacts />\n          <List />\n        </Section>\n      </Container>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./actions\";\n\nconst items = createReducer([], {\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n  [contactsActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./reducer\";\n\nconst contactsPersistConfig = {\n  key: \"conatcts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}